{"version":3,"sources":["component/Header/Header.js","axios.js","component/TinderCards/TinderCards.js","component/SwipeButtons/SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","monsters","setMonsters","lastDirection","setLastDirection","useEffect","a","get","req","data","fetchData","charactersState","href","rel","map","monster","preventSwipe","onSwipe","dir","direction","nameToDelete","name","console","log","onCardLeftScreen","filter","character","style","backgroundImage","id","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAyBeA,MApBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAG3C,qBACIA,UAAU,eACVG,IAAI,mEACJC,IAAI,KAGR,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,+JCbvCK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,oCC2DEC,MAzDf,WAAwB,IAAD,EACaC,mBAAS,IADtB,mBACZC,EADY,KACFC,EADE,OAEuBF,qBAFvB,mBAEZG,EAFY,KAEGC,EAFH,KAInBC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBV,EAAMW,IAAI,gBADhC,OACUC,EADV,OAGIN,EAAYM,EAAIC,MAHpB,4CADY,uBAAC,WAAD,wBAOZC,KACD,IAEH,IAAIC,EAAkBV,EAatB,OACI,sBAAKX,UAAU,cAAf,UACI,sBAAMsB,KAAK,8DAA8DC,IAAI,eAC7E,sBAAMD,KAAK,8DAA8DC,IAAI,eAC7E,qBAAKvB,UAAU,6BAAf,SAEQW,EAASa,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CACIzB,UAAU,QAEV0B,aAAc,CAAC,KAAM,QACrBC,QAAS,SAAAC,GAAG,OAtBpBC,EAsB+BD,EAtBpBE,EAsByBL,EAAQM,KArBxDC,QAAQC,IAAI,aAAeH,QAC3BhB,EAAiBe,GAFN,IAACA,EAAWC,GAuBHI,iBAAkB,kBAlBvBH,EAkBwCN,EAAQM,KAjB/DC,QAAQC,IAAIF,EAAO,oBACnBV,EAAkBA,EAAgBc,QAAO,SAAAC,GAAS,OAAIA,EAAUL,OAASA,UACzEnB,EAAYS,GAHG,IAAAU,GAaC,SAOI,qBACIM,MAAO,CAACC,gBAAgB,4BAAD,OAA8Bb,EAAQc,GAAtC,4BACvBvC,UAAU,OAFd,SAII,6BAAKyB,EAAQM,UATZN,EAAQc,SAc7B,qBAAKvC,UAAU,6BAAf,SACKa,EAAgB,qBAAwBb,UAAU,WAAlC,wBAAyDa,IAAhDA,GAAsE,oBAAIb,UAAU,WAAd,gDCzBjGwC,MAtBf,WACI,OACI,sBAAKxC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,yBAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCTvBuC,MAXf,WAEE,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f63b8b68.chunk.js","sourcesContent":["import './Header.css'\nimport PersonIcon from '@material-ui/icons/Person';\nimport { IconButton } from '@material-ui/core';\nimport ForumIcon from '@material-ui/icons/Forum';\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <IconButton>\n                <PersonIcon fontSize=\"large\" className=\"header__icon\"/>\n            </IconButton>\n\n            <img \n                className=\"header__logo\"\n                src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\"\n                alt=\"\"\n            />\n\n            <IconButton>\n                <ForumIcon fontSize=\"large\" className=\"header__icon\" />\n            </IconButton>\n        </div>\n    )\n}\n\nexport default Header\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://ac-tinder.herokuapp.com\",\n});\n\nexport default instance;","import React, { useEffect, useMemo, useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport './TinderCards.css';\nimport axios from '../../axios';\n\nfunction TinderCards() {\n    const [monsters, setMonsters] = useState([]);\n    const [lastDirection, setLastDirection] = useState()\n\n    useEffect(() => {\n        async function fetchData(){\n            const req = await axios.get('/tinder/card');\n\n            setMonsters(req.data);\n        }\n\n        fetchData(); \n    }, [])\n\n    let charactersState = monsters\n\n    const swiped = (direction, nameToDelete) => {\n        console.log(\"removing: \" + nameToDelete);\n        setLastDirection(direction);\n    }\n\n    const outOfFrame = name => {\n        console.log(name + \" left the screen\");\n        charactersState = charactersState.filter(character => character.name !== name);\n        setMonsters(charactersState);\n    }\n\n    return (\n        <div className=\"tinderCards\">\n            <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n            <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n            <div className=\"tinderCards__cardContainer\">\n                {\n                    monsters.map((monster) => (\n                        <TinderCard \n                            className=\"swipe\"\n                            key={monster.id}\n                            preventSwipe={[\"up\", \"down\"]}\n                            onSwipe={dir => swiped(dir, monster.name)}\n                            onCardLeftScreen={() => outOfFrame(monster.name)}\n                        >\n                            <div\n                                style={{backgroundImage: `url(https://robohash.org/${monster.id}?set=set2&size=220x220)`}}\n                                className=\"card\"\n                            >\n                                <h3>{monster.name}</h3>\n                            </div>\n                        </TinderCard>))\n                }\n            </div>\n            <div className=\"tinderCards__textContainer\">\n                {lastDirection ? <h2 key={lastDirection} className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText'>Swipe a card to get started!</h2>}\n            </div> \n        </div>\n    )\n}\n\nexport default TinderCards;\n","import './SwipeButtons.css';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '@material-ui/core/IconButton';\nimport swipe from '../TinderCards/TinderCards';\n\nfunction SwipeButtons() {\n    return (\n        <div className=\"swipeButtons\">\n            <IconButton className=\"swipeButtons__repeat\">\n                <ReplayIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className=\"swipeButtons__left\">\n                <CloseIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className=\"swipeButtons__star\">\n                <StarRateIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className=\"swipeButtons__right\">\n                <FavoriteIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className=\"swipeButtons__lighting\">\n                <FlashOnIcon fontSize=\"large\" />\n            </IconButton>\n        </div>\n    )\n}\n\nexport default SwipeButtons\n","import './App.css';\nimport Header from './component/Header/Header';\nimport SwipeButtons from './component/SwipeButtons/SwipeButtons';\nimport TinderCards from './component/TinderCards/TinderCards';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <TinderCards/>\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}